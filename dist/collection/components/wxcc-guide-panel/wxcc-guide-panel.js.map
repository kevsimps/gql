{"version":3,"file":"wxcc-guide-panel.js","sourceRoot":"","sources":["../../../src/components/wxcc-guide-panel/wxcc-guide-panel.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Prop, State, h, Listen } from \"@stencil/core\";\r\n\r\n@Component({\r\n    tag: \"wxcc-guide-panel\",\r\n    styleUrl: \"wxcc-guide-panel.css\",\r\n    shadow: true\r\n\r\n})\r\nexport class SideDrawer {\r\n    @State() showNav = false;\r\n    @Prop({ reflect: true }) arttitle: string;\r\n    @Prop({ reflect: true, mutable: true }) opened: boolean;\r\n    @State() content\r\n    @State() lessons: {title: string, url: string}[] = []\r\n    @State() currentPage\r\n    @Prop({reflect: true}) lList: string;\r\n\r\n    async componentWillLoad(){\r\n \r\n    const response = await fetch(this.lList)\r\n    // sessionStorage.setItem(\"lessons\", await response.text())\r\n    const lessons = await response.json()\r\n    this.lessons = await lessons.map(match =>{\r\n      return { title: match[\"title\"], url: match[\"address\"] }\r\n\r\n    })\r\n    \r\n}\r\n    \r\n    \r\n    // onCloseDrawer(){\r\n    //     this.opened=false;\r\n    // }\r\n    onContentChange(content: string){\r\n        this.showNav = content === \"nav\"\r\n        console.log(content)\r\n    }\r\n    // @Method()\r\n    // async open(){\r\n    //   this.opened=true \r\n    // }\r\n\r\n    @Listen('toggleGuide', {target:\"body\"})\r\n    onToggle(event: CustomEvent){\r\n        console.log(event.detail)\r\n        this.opened = !this.opened\r\n    }\r\n\r\n    @Listen('wxccGuidePageTurn', {target:\"body\"})\r\n    onNext(event: CustomEvent){\r\n         console.log(event.detail)\r\n        let url\r\n        const iHere = this.lessons.findIndex(x => x.title === this.currentPage)\r\n        if (!iHere){\r\n            this.currentPage = this.lessons[0].title\r\n        }\r\n        console.log(this.currentPage)\r\n        console.log(iHere)\r\n        this.currentPage = this.lessons[iHere + 1].title\r\n        if(event.detail === \"next\"){\r\n        url = this.lessons[iHere + 1].url\r\n        this.currentPage = this.lessons[iHere + 1].title\r\n        }else {\r\n        url = this.lessons[iHere - 1].url\r\n        this.currentPage = this.lessons[iHere - 1].title\r\n        }\r\n        this.getHTML(url)\r\n        .then(html => {\r\n          if (html !== null) {\r\n            this.content = html\r\n            this.content = <div innerHTML={this.content}></div>\r\n            // console.log(html);\r\n          \r\n          }\r\n        });\r\n    }\r\n\r\n    onChoice(url){\r\n      this.getHTML(url)\r\n      .then(html => {\r\n        if (html !== null) {\r\n          this.content = html\r\n          this.content = <div innerHTML={this.content}></div>\r\n          this.currentPage = this.lessons[this.lessons.findIndex(x => x.url === url)].title\r\n          this.showNav = false\r\n    }})}\r\n\r\nasync getHTML(url) {\r\n  try {\r\n    const response = await fetch(url);\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! Status: ${response.status}`);\r\n    }\r\n\r\n    const html = await response.text();\r\n    return html;\r\n  } catch (error) {\r\n    console.error(\"Error during fetch:\", error);\r\n    return null;\r\n  }\r\n}\r\n\r\n\r\n\r\n    render() {\r\n        let mainContent = this.content || <slot/>;\r\n        if(this.showNav){\r\n        mainContent = <ul class=\"nav\">{this.lessons.map(lesson=> (\r\n          <li class=\"nav\" onClick={this.onChoice.bind(this, lesson.url)}><strong>{lesson.title}</strong></li>\r\n        ))}</ul>}\r\n        // ( \r\n        //     <div id=\"contact-information\">\r\n        //       <h2> Contact Information</h2>\r\n        //     <p>You can reach us via phone or email</p>  \r\n        //     <ul>\r\n        //         <li>Phone: 8144557771</li>\r\n        //         <li>EMail: <a href=\"mailto:something@something.com\">something@something.com</a></li>\r\n        //         </ul>\r\n        //     </div>\r\n            //  )}\r\n\r\n            return [\r\n                // <div class=\"backdrop\" onClick={this.onCloseDrawer.bind(this)}/>,\r\n            <aside >\r\n                <header>\r\n                    <h1 class=\"post-title\">{ this.currentPage ||this.arttitle}</h1>\r\n                    {/* <button onClick={this.onCloseDrawer.bind(this)}>X</button> */}\r\n                </header>\r\n                \r\n                <section id=\"tabs\">\r\n                    <button class={!this.showNav ? \"active\":\"\"} onClick={this.onContentChange.bind(this, \"lesson\")}>Lesson</button>\r\n                    <button class={this.showNav ? \"active\":\"\"} onClick={this.onContentChange.bind(this, \"nav\")}>Navigation</button>\r\n                </section>\r\n                <main>\r\n                    {mainContent}\r\n                </main>\r\n            </aside >\r\n            ];\r\n    }\r\n}\r\n"]}